Paired with Preethi Merugumala & Valerie Nguyen
TPS #1:
1. The three pools of memory are the stack, heap, and static data. The stack stores local variables that are created from code. The heap is used to allocate memory and store information through the use of pointers. Static data stores the variables that aren't declared inside of the main() function, such as variables stored in a function. 
2. 
	a. 3
	b. 2 of said variables are pointers. The pointer ptr points to the memory allocated to store the integer 14, though for whatever reason, it is pointing to allocated memory that is double the size of an integer. The second pointer, handle, is a double pointer that is pointing to the original pointer, ptr. 
	c. All variables are stored in the stack, though some of the values that are being stored are being stored in the heap. 
	d. It will be pointing to the heap. 

3. *Completed*
4. *Copmleted*
5. *Completed*

TPS #2:
1. The program creates a Node structure with an integer value , a float value, and a pointer intended to point to the next Node. 
2. *Completed*
3. I can observe that the addresses these variables are being stored in are quite far appart from each other. This is probably because the head pointer is being stored in the stack while the Node structure itself is being stored in the heap. We can confirm this because of line 13, and the malloc() command being used there. 

Assignment #1:
1. 
	a. Because the function needs to understand how long the array actually is in order to sort the whole array. Realistically the size can be found using a long string of code using the sizeof() function a few times. However given the main() function, it's seems simpler to just pass in the size of the array directly into the bubbleSort() function. 
	b. No, the array is copied and the sorted copy is returned. 
	c. We need a new array, s_array, because the main function intends to print the unordered, and the ordered version of the list. 
2. *Completed*
3. *Completed*

Assignment #2:
1. 
